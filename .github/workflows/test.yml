name: OrangeHrm CI/CD

on:
  workflow_run:
    workflows: ["Deploy Infrastructure"]
    types: 
      - completed 
jobs: 
  SSH-into-instance:
    runs-on: ubuntu-latest
    steps:
       - name: Checkout Repository
         uses: actions/checkout@v2

       - name: Set REMOTE_HOST using EC2 Public IP
         run: |
          REMOTE_HOST="${{ needs.deploy.outputs.ec2_public_ip }}"
          echo "REMOTE_HOST=$REMOTE_HOST" >> $GITHUB_ENV

       - name: Checkout OrangeHRM branch
         run: |
          git checkout 5.1-EC2-Docker
       
       - uses: actions/checkout@v3
       - name: SSH into EC2 Intance
         env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ env.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.USERNAME }}
         run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$REMOTE_HOST" >> ~/.ssh/known_hosts
          (ssh -i ~/.ssh/id_rsa -o "StrictHostKeyChecking=no" "$REMOTE_USER@$REMOTE_HOST" '
            git clone https://github.com/SkyOps-Dev/orangehrm.git
            cd orangehrm
            git checkout remotes/origin/5.1-EC2-Docker
            sudo apt-get update
            sudo apt-get install ca-certificates curl gnupg
            sudo install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            sudo chmod a+r /etc/apt/keyrings/docker.gpg
            echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
            sudo docker build -t orange .
            sudo docker images
          ')
          
       - name: Deploy Application & Database
         env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ env.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.USERNAME }}
         run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$REMOTE_HOST" >> ~/.ssh/known_hosts
          (ssh -i ~/.ssh/id_rsa -o "StrictHostKeyChecking=no" "$REMOTE_USER@$REMOTE_HOST" '
            cd orangehrm
            sudo docker compose up -d
            sudo docker ps
          ')
